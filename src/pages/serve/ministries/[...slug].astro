---
import { getCollection } from 'astro:content';
import PageLayout from '../../../layouts/PageLayout.astro';
import Card from '../../../components/ui/Card.astro';
import Button from '../../../components/ui/Button.astro';
import Breadcrumbs from '../../../components/navigation/Breadcrumbs.astro';
import RelatedContent from '../../../components/navigation/RelatedContent.astro';
import { getPagePath } from '../../../utils/paths.js';

export async function getStaticPaths() {
  const ministries = await getCollection('ministries');
  return ministries.map((ministry) => ({
    params: { slug: ministry.slug },
    props: { ministry },
  }));
}

const { ministry } = Astro.props;
const { Content } = await ministry.render();

// Get related ministries (same category)
const allMinistries = await getCollection('ministries');
const relatedMinistries = allMinistries
  .filter(m => m.slug !== ministry.slug && m.data.category === ministry.data.category)
  .slice(0, 3);

// Prepare breadcrumb items
const breadcrumbItems = [
  { label: 'Serve', href: getPagePath('/serve') },
  { label: 'Ministries', href: getPagePath('/serve/ministries') },
  { label: ministry.data.title, current: true }
];

// Prepare related content for RelatedContent component
const relatedContentItems = relatedMinistries.map(m => ({
  title: m.data.title,
  description: m.data.description,
  href: getPagePath(`/serve/ministries/${m.slug}`),
  type: 'ministry' as const
}));

// Category display names
const categoryNames = {
  'children': 'Children',
  'youth': 'Youth',
  'adult': 'Adult',
  'seniors': 'Seniors',
  'special-needs': 'Special Needs',
  'outreach': 'Outreach'
};

// Category icons
const getCategoryIcon = (category) => {
  switch (category) {
    case 'children':
      return `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h1.586a1 1 0 01.707.293l2.414 2.414a1 1 0 00.707.293H15M9 10V9a2 2 0 012-2h2a2 2 0 012 2v1M9 10v5a2 2 0 002 2h2a2 2 0 002-2v-5"></path>
      </svg>`;
    case 'youth':
      return `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
      </svg>`;
    case 'adult':
      return `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
      </svg>`;
    case 'seniors':
      return `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
      </svg>`;
    case 'special-needs':
      return `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
      </svg>`;
    case 'outreach':
      return `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>`;
    default:
      return `<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
      </svg>`;
  }
};
---

<PageLayout 
  title={`${ministry.data.title} - Living Hope Lutheran Church`}
  description={`Learn about ${ministry.data.title} at Living Hope Lutheran Church. ${ministry.data.description}`}
>
  <!-- Breadcrumbs -->
  <section class="py-4 bg-gray-50">
    <div class="container mx-auto px-4">
      <Breadcrumbs items={breadcrumbItems} />
    </div>
  </section>

  <!-- Hero Section -->
  <section class="pt-32 pb-16 bg-gradient-to-br from-primary-600 to-primary-800 text-white">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto">
        <div class="mb-6">
          <div class="flex items-center">
            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-white/20 text-white mr-4">
              <span class="mr-2" set:html={getCategoryIcon(ministry.data.category)}></span>
              {categoryNames[ministry.data.category]} Ministry
            </span>
            {ministry.data.featured && (
              <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-accent-gold text-white">
                Featured
              </span>
            )}
          </div>
        </div>
        <h1 class="text-4xl md:text-6xl font-bold mb-6">
          {ministry.data.title}
        </h1>
        <p class="text-xl text-primary-100 mb-8">
          {ministry.data.description}
        </p>
        
        <!-- Quick Info -->
        <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-4 text-primary-200">
          {ministry.data.leader && (
            <div class="flex items-center">
              <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
              <div>
                <p class="text-xs text-primary-300">Leader</p>
                <p class="font-medium">{ministry.data.leader}</p>
              </div>
            </div>
          )}
          {ministry.data.meetingTime && (
            <div class="flex items-center">
              <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              <div>
                <p class="text-xs text-primary-300">When</p>
                <p class="font-medium">{ministry.data.meetingTime}</p>
              </div>
            </div>
          )}
          {ministry.data.location && (
            <div class="flex items-center">
              <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
              </svg>
              <div>
                <p class="text-xs text-primary-300">Where</p>
                <p class="font-medium">{ministry.data.location}</p>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  </section>

  <!-- Ministry Content -->
  <section class="py-16 bg-white">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto">
        <div class="grid lg:grid-cols-3 gap-12">
          
          <!-- Quick Info Sidebar -->
          <div class="lg:col-span-1">
            <Card variant="elevated" class="sticky top-24">
              <div class="p-6">
                <h3 class="text-lg font-bold text-gray-900 mb-4">Ministry Details</h3>
                
                <!-- Ministry Info -->
                <div class="space-y-4 mb-6">
                  <div>
                    <p class="text-sm font-medium text-gray-500 mb-1">Category</p>
                    <div class="flex items-center">
                      <span class="mr-2" set:html={getCategoryIcon(ministry.data.category)}></span>
                      <span class="text-gray-900">{categoryNames[ministry.data.category]}</span>
                    </div>
                  </div>
                  
                  {ministry.data.leader && (
                    <div>
                      <p class="text-sm font-medium text-gray-500 mb-1">Leader</p>
                      <p class="text-gray-900">{ministry.data.leader}</p>
                    </div>
                  )}
                  
                  {ministry.data.meetingTime && (
                    <div>
                      <p class="text-sm font-medium text-gray-500 mb-1">Meeting Time</p>
                      <p class="text-gray-900">{ministry.data.meetingTime}</p>
                    </div>
                  )}
                  
                  {ministry.data.location && (
                    <div>
                      <p class="text-sm font-medium text-gray-500 mb-1">Location</p>
                      <p class="text-gray-900">{ministry.data.location}</p>
                    </div>
                  )}
                </div>
                
                <!-- Contact Actions -->
                <div class="space-y-3">
                  {ministry.data.contact ? (
                    <Button href={`mailto:${ministry.data.contact}`} variant="primary" size="sm" class="w-full">
                      Contact Leader
                    </Button>
                  ) : (
                    <Button href={getPagePath("/contact")} variant="primary" size="sm" class="w-full">
                      Get More Info
                    </Button>
                  )}
                  <Button href={getPagePath("/serve")} variant="secondary" size="sm" class="w-full">
                    Volunteer Opportunities
                  </Button>
                </div>
                
                <!-- Back to Ministries -->
                <div class="mt-6 pt-6 border-t border-gray-200">
                  <Button href={getPagePath("/serve/ministries")} variant="outline" size="sm" class="w-full">
                    ← All Ministries
                  </Button>
                </div>
              </div>
            </Card>
          </div>
          
          <!-- Main Content -->
          <div class="lg:col-span-2">
            <Card variant="elevated">
              <div class="p-8">
                <h2 class="text-2xl font-bold text-gray-900 mb-6">About This Ministry</h2>
                <div class="prose prose-lg max-w-none">
                  <Content />
                </div>
              </div>
            </Card>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Related Ministries -->
  {relatedContentItems.length > 0 && (
    <section class="py-16 bg-gray-50">
      <div class="container mx-auto px-4">
        <div class="max-w-6xl mx-auto">
          <RelatedContent 
            title={`Other ${categoryNames[ministry.data.category]} Ministries`}
            items={relatedContentItems}
            maxItems={3}
            variant="grid"
          />
        </div>
      </div>
    </section>
  )}

  <!-- Get Involved CTA -->
  <section class="py-16 bg-primary-600 text-white">
    <div class="container mx-auto px-4 text-center">
      <div class="max-w-3xl mx-auto">
        <h2 class="text-3xl font-bold mb-6">
          Ready to Get Involved?
        </h2>
        <p class="text-xl text-primary-100 mb-8">
          Join us in {ministry.data.title} and discover how you can make a difference in our community.
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          {ministry.data.contact ? (
            <Button href={`mailto:${ministry.data.contact}`} variant="secondary" size="lg">
              Contact {ministry.data.leader || 'Ministry Leader'}
            </Button>
          ) : (
            <Button href={getPagePath("/contact")} variant="secondary" size="lg">
              Contact Church Office
            </Button>
          )}
          <Button href={getPagePath("/connect/im-new")} variant="outline" size="lg">
            Plan Your Visit
          </Button>
        </div>
      </div>
    </div>
  </section>

</PageLayout> 